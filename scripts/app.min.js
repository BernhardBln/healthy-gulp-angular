!function(e){try{e=angular.module("healthyGulpAngularAppComponents")}catch(n){e=angular.module("healthyGulpAngularAppComponents",[])}e.run(["$templateCache",function(e){e.put("components/demoComponent/demoCsComponent.html","<h1>This is a CoffeScript demo component.</h1>")}])}();try{module=angular.module("healthyGulpAngularAppComponents")}catch(e){module=angular.module("healthyGulpAngularAppComponents",[])}module.directive("demoComponent",[function(){return{restrict:"A",templateUrl:"components/demoComponent/demoComponent.html"}}]),angular.module("healthyGulpAngularApp",["ui.router","healthyGulpAngularAppComponents"]).config(["$stateProvider","$urlRouterProvider",function(e,n){n.otherwise("/"),e.state("home",{url:"/",templateUrl:"components/home.html"})}]),function(e){try{e=angular.module("healthyGulpAngularAppComponents")}catch(n){e=angular.module("healthyGulpAngularAppComponents",[])}e.run(["$templateCache",function(e){e.put("components/demoComponent/demoComponent.html","<h1>This is a demo component.</h1>")}])}();var e,module;try{module=angular.module("healthyGulpAngularAppComponents")}catch(_error){e=_error,module=angular.module("healthyGulpAngularAppComponents",[])}module.directive("demoCsComponent",[function(){return{restrict:"A",templateUrl:"components/demoComponent/demoCsComponent.html"}}]),function(e){try{e=angular.module("healthyGulpAngularAppComponents")}catch(n){e=angular.module("healthyGulpAngularAppComponents",[])}e.run(["$templateCache",function(e){e.put("components/home.html",' Home page.<p><div demo-component></div></p><p><div demo-cs-component></div></p><button type="button" class="btn btn-default" aria-label="Left Align"><span class="glyphicon glyphicon-align-left" aria-hidden="true"></span></button>')}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZGVtb0NvbXBvbmVudC9kZW1vQ3NDb21wb25lbnQuanMiLCJjb21wb25lbnRzL2RlbW9Db21wb25lbnQvZGVtb0NvbXBvbmVudERpcmVjdGl2ZS5qcyIsImFwcC5qcyIsImNvbXBvbmVudHMvZGVtb0NvbXBvbmVudC9kZW1vQ29tcG9uZW50LmpzIiwiY29tcG9uZW50cy9kZW1vQ29tcG9uZW50L2RlbW9Dc0NvbXBvbmVudERpcmVjdGl2ZS5qcyIsImNvbXBvbmVudHMvaG9tZS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJhbmd1bGFyIiwiZSIsInJ1biIsIiR0ZW1wbGF0ZUNhY2hlIiwicHV0IiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJ0ZW1wbGF0ZVVybCIsImNvbmZpZyIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwib3RoZXJ3aXNlIiwic3RhdGUiLCJ1cmwiLCJfZXJyb3IiXSwibWFwcGluZ3MiOiJDQUFBLFNBQUFBLEdBQ0EsSUFDQUEsRUFBQUMsUUFBQUQsT0FBQSxtQ0FDQSxNQUFBRSxHQUNBRixFQUFBQyxRQUFBRCxPQUFBLHNDQUVBQSxFQUFBRyxLQUFBLGlCQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLElBQUEsZ0RBQ0EsdURDUkEsS0FDQUwsT0FBQUMsUUFBQUQsT0FBQSxtQ0FDQSxNQUFBRSxHQUNBRixPQUFBQyxRQUFBRCxPQUFBLHNDQUdBQSxPQUFBTSxVQUFBLGlCQUFBLFdBQ0EsT0FDQUMsU0FBQSxJQUNBQyxZQUFBLGtEQ1RBUCxRQUFBRCxPQUFBLHlCQUFBLFlBQUEsb0NBRUFTLFFBQUEsaUJBQUEscUJBQ0EsU0FBQUMsRUFBQUMsR0FFQUEsRUFBQUMsVUFBQSxLQUVBRixFQUVBRyxNQUFBLFFBQ0FDLElBQUEsSUFDQU4sWUFBQSw0QkNYQSxTQUFBUixHQUNBLElBQ0FBLEVBQUFDLFFBQUFELE9BQUEsbUNBQ0EsTUFBQUUsR0FDQUYsRUFBQUMsUUFBQUQsT0FBQSxzQ0FFQUEsRUFBQUcsS0FBQSxpQkFBQSxTQUFBQyxHQUNBQSxFQUFBQyxJQUFBLDhDQUNBLDJDQ1JBLElBQUFILEdBQUFGLE1BRUEsS0FDQUEsT0FBQUMsUUFBQUQsT0FBQSxtQ0FDQSxNQUFBZSxRQUNBYixFQUFBYSxPQUNBZixPQUFBQyxRQUFBRCxPQUFBLHNDQUdBQSxPQUFBTSxVQUFBLG1CQUNBLFdBQ0EsT0FDQUMsU0FBQSxJQUNBQyxZQUFBLG9EQ2JBLFNBQUFSLEdBQ0EsSUFDQUEsRUFBQUMsUUFBQUQsT0FBQSxtQ0FDQSxNQUFBRSxHQUNBRixFQUFBQyxRQUFBRCxPQUFBLHNDQUVBQSxFQUFBRyxLQUFBLGlCQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLElBQUEsdUJBQ0EiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdoZWFsdGh5R3VscEFuZ3VsYXJBcHBDb21wb25lbnRzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdoZWFsdGh5R3VscEFuZ3VsYXJBcHBDb21wb25lbnRzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdjb21wb25lbnRzL2RlbW9Db21wb25lbnQvZGVtb0NzQ29tcG9uZW50Lmh0bWwnLFxuICAgICc8aDE+VGhpcyBpcyBhIENvZmZlU2NyaXB0IGRlbW8gY29tcG9uZW50LjwvaDE+Jyk7XG59XSk7XG59KSgpO1xuIiwidHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2hlYWx0aHlHdWxwQW5ndWxhckFwcENvbXBvbmVudHMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2hlYWx0aHlHdWxwQW5ndWxhckFwcENvbXBvbmVudHMnLCBbXSk7XG59XG5cbm1vZHVsZS5kaXJlY3RpdmUoJ2RlbW9Db21wb25lbnQnLCBbZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdjb21wb25lbnRzL2RlbW9Db21wb25lbnQvZGVtb0NvbXBvbmVudC5odG1sJ1xuICAgICAgICB9O1xuICAgIH1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdoZWFsdGh5R3VscEFuZ3VsYXJBcHAnLCBbJ3VpLnJvdXRlcicsICdoZWFsdGh5R3VscEFuZ3VsYXJBcHBDb21wb25lbnRzJ10pXG5cbi5jb25maWcoWyckc3RhdGVQcm92aWRlcicsICckdXJsUm91dGVyUHJvdmlkZXInLFxuICAgIGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcblxuICAgICAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvJyk7XG5cbiAgICAgICAgJHN0YXRlUHJvdmlkZXJcblxuICAgICAgICAgICAgLnN0YXRlKCdob21lJywge1xuICAgICAgICAgICAgICAgIHVybDogJy8nLFxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnY29tcG9uZW50cy9ob21lLmh0bWwnXG4gICAgICAgICAgICB9KTtcblxuICAgIH1dKTtcbiIsIihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdoZWFsdGh5R3VscEFuZ3VsYXJBcHBDb21wb25lbnRzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdoZWFsdGh5R3VscEFuZ3VsYXJBcHBDb21wb25lbnRzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdjb21wb25lbnRzL2RlbW9Db21wb25lbnQvZGVtb0NvbXBvbmVudC5odG1sJyxcbiAgICAnPGgxPlRoaXMgaXMgYSBkZW1vIGNvbXBvbmVudC48L2gxPicpO1xufV0pO1xufSkoKTtcbiIsInZhciBlLCBtb2R1bGU7XG5cbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdoZWFsdGh5R3VscEFuZ3VsYXJBcHBDb21wb25lbnRzJyk7XG59IGNhdGNoIChfZXJyb3IpIHtcbiAgZSA9IF9lcnJvcjtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2hlYWx0aHlHdWxwQW5ndWxhckFwcENvbXBvbmVudHMnLCBbXSk7XG59XG5cbm1vZHVsZS5kaXJlY3RpdmUoJ2RlbW9Dc0NvbXBvbmVudCcsIFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICB0ZW1wbGF0ZVVybDogJ2NvbXBvbmVudHMvZGVtb0NvbXBvbmVudC9kZW1vQ3NDb21wb25lbnQuaHRtbCdcbiAgICB9O1xuICB9XG5dKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTnZiWEJ2Ym1WdWRITXZaR1Z0YjBOdmJYQnZibVZ1ZEM5a1pXMXZRM05EYjIxd2IyNWxiblJFYVhKbFkzUnBkbVV1WTI5bVptVmxJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEVsQlFVRTdPMEZCUVVFN1JVRkRSU3hOUVVGQkxFZEJRVk1zVDBGQlR5eERRVUZETEUxQlFWSXNRMEZCWlN4cFEwRkJaaXhGUVVSWU8wTkJRVUVzWTBGQlFUdEZRVVZOTzBWQlEwb3NUVUZCUVN4SFFVRlRMRTlCUVU4c1EwRkJReXhOUVVGU0xFTkJRV1VzYVVOQlFXWXNSVUZCYTBRc1JVRkJiRVFzUlVGSVdEczdPMEZCUzBFc1RVRkJUU3hEUVVGRExGTkJRVkFzUTBGQmFVSXNhVUpCUVdwQ0xFVkJRVzlETzBWQlFVVXNVMEZCUVR0WFFVTnNRenROUVVGQkxGRkJRVUVzUlVGQlZTeEhRVUZXTzAxQlEwRXNWMEZCUVN4RlFVRmhMQ3REUVVSaU96dEZRVVJyUXl4RFFVRkdPME5CUVhCRElpd2labWxzWlNJNkltTnZiWEJ2Ym1WdWRITXZaR1Z0YjBOdmJYQnZibVZ1ZEM5a1pXMXZRM05EYjIxd2IyNWxiblJFYVhKbFkzUnBkbVV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pTDNOdmRYSmpaUzhpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKMGNubGNiaUFnYlc5a2RXeGxJRDBnWVc1bmRXeGhjaTV0YjJSMWJHVWdKMmhsWVd4MGFIbEhkV3h3UVc1bmRXeGhja0Z3Y0VOdmJYQnZibVZ1ZEhNblhHNWpZWFJqYUNCbFhHNGdJRzF2WkhWc1pTQTlJR0Z1WjNWc1lYSXViVzlrZFd4bElDZG9aV0ZzZEdoNVIzVnNjRUZ1WjNWc1lYSkJjSEJEYjIxd2IyNWxiblJ6Snl3Z1cxMWNibHh1Ylc5a2RXeGxMbVJwY21WamRHbDJaU0FuWkdWdGIwTnpRMjl0Y0c5dVpXNTBKeXdnV3lBb0tTQXRQbHh1SUNBZ0lISmxjM1J5YVdOME9pQW5RU2NzWEc0Z0lDQWdkR1Z0Y0d4aGRHVlZjbXc2SUNkamIyMXdiMjVsYm5SekwyUmxiVzlEYjIxd2IyNWxiblF2WkdWdGIwTnpRMjl0Y0c5dVpXNTBMbWgwYld3blhHNGdYVnh1SWwxOSIsIihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdoZWFsdGh5R3VscEFuZ3VsYXJBcHBDb21wb25lbnRzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdoZWFsdGh5R3VscEFuZ3VsYXJBcHBDb21wb25lbnRzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdjb21wb25lbnRzL2hvbWUuaHRtbCcsXG4gICAgJyBIb21lIHBhZ2UuPHA+PGRpdiBkZW1vLWNvbXBvbmVudD48L2Rpdj48L3A+PHA+PGRpdiBkZW1vLWNzLWNvbXBvbmVudD48L2Rpdj48L3A+PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLWRlZmF1bHRcIiBhcmlhLWxhYmVsPVwiTGVmdCBBbGlnblwiPjxzcGFuIGNsYXNzPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1hbGlnbi1sZWZ0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9zcGFuPjwvYnV0dG9uPicpO1xufV0pO1xufSkoKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==